using DotNetOpenAPI.Repositories;
using Microsoft.OpenApi.Models;
using System.Reflection;

var builder = WebApplication.CreateBuilder(args);

/// <summary>
/// <remarks>
/// Here we have used Sngletone design pattern to create a single instance of CRUDActions class and use
/// it throughout the application. This class is responsible for handling all the CRUD operations.
/// </remarks>
///</summary>

builder.Services.AddSingleton<ICRUDActions,CRUDActions>();



///<summary>
///<remarks>
///This section is used to add CORS policy to the application. CORS is a security feature that allows 
///a web application running at one origin to access resources from a different origin.
/// </remarks>
///</summary>
builder.Services.AddCors(options =>
{
    options.AddPolicy("AllowAll",
        builder => builder.AllowAnyOrigin()
            .AllowAnyMethod()
            .AllowAnyHeader());
});

builder.Services.AddControllers();
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();

///<summary>
///<remarks>
/// Swagger Documentation Section - This section is used to add Swagger documentation to the application.
///</remarks>
/// </summary>
var info = new OpenApiInfo()
{
    Title = "DotNet CRUD WebAPI With Open API Documentation",
    Version = "v1",
    Description = "This is a sample API created using .NET Core to test documentation process using OpenAPI",
    Contact = new OpenApiContact()
    {
        Name = "Kaushik Natua",
        Email = "kaushik.natua@hyland.com",
    }
};

///<summary>
///<remarks>
///Set the comments path for the Swagger JSON and UI in json format for swaager.josn file
/// </remarks>
///</summary>
builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", info);

    ///<summary>
    ///<remarks>
    ///Set the comments path for the Swagger JSON and UI. 
    ///The XML file is generated by the build process and should be present in the bin folder.
    /// </remarks>
    ///</summary>
    var xmlFile = $"{Assembly.GetExecutingAssembly().GetName().Name}.xml";
    var xmlPath = Path.Combine(AppContext.BaseDirectory, xmlFile);
    c.IncludeXmlComments(xmlPath);    
});

var app = builder.Build();

///<summary>
/// Configure the HTTP request pipeline.
///</summary>
if (app.Environment.IsDevelopment() || app.Environment.IsProduction())
{
    app.UseSwagger(u =>
    {
        u.RouteTemplate = "swagger/{documentName}/swagger.json";
    });

    app.UseSwaggerUI(c =>
    {
         c.SwaggerEndpoint("/swagger/v1/swagger.json", "My API V1");
        c.RoutePrefix = string.Empty;
    });
}

app.UseHttpsRedirection();
app.UseAuthorization();

app.UseEndpoints(endpoints =>
{
    endpoints.MapControllers();
});



app.Run();
