<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetOpenAPI</name>
    </assembly>
    <members>
        <member name="T:DotNetOpenAPI.Controllers.EmployeesController">
            <summary>
            This controller is responsible for handling requests related to employees CRUD operations.
            Will provide the necessary http response codes and data.
            The controller will interact with the ICURDActions interface to get the data.
            </summary>
        </member>
        <member name="M:DotNetOpenAPI.Controllers.EmployeesController.#ctor(DotNetOpenAPI.Repositories.ICRUDActions)">
            <summary>
            This is the constructor of the EmployeesController class.
            </summary>
            <param name="crudActions"></param>
        </member>
        <member name="M:DotNetOpenAPI.Controllers.EmployeesController.GetEmployees">
             <summary>
             Get all employees
             </summary>
             <remarks>
             
             Sample request:
             Get: /api/Employees
             
             ** This method will return all the employees present under EmployeeList if records exist under the list.
             
             Sample Input:
             
             EmployeeDB List Info:
             
                  { Id = 1, Name = "John", Department = "IT", Email = "john@hyland.com" },
                  { Id = 2, Name = "Jane", Department = "HR", Email = "jane@hyland.com" }
                     
                 
             Sample Response (Output):    
             
             Response Code: 200
             
             Response Body:
             
             [
                 {
                     "id": 1,
                     "name": "John",
                     "department": "IT",
                     "email": "john@hyland.com"
                 },
                 {
                     "id": 2,
                     "name": "Jane",
                     "department": "HR",
                     "email": "jane@hyland.com"
                 }
             ] 
             
             ****************************************************************************************
             /// Sample request:
             Get: /api/Employees
             
             ** If no records are present under EmployeeList, it will return 404 Not Found.
             
             Sample Input:
             
             EmployeeDb List Info: Null
             
             Sample Response (Output):
             
             Status Code: 404 
             
             Response Body: 
             
             No Record Found
             
             </remarks>
            <returns>200 OK with the employees records</returns>
             <returns>404 Not Found list is empty</returns>
        </member>
        <member name="M:DotNetOpenAPI.Controllers.EmployeesController.GetEmployee(System.Int32)">
             <summary>
             Get an employee by id
             </summary>
             /// <remarks>
             ** This method will return an employee if searched id is present under EmployeeList 
              
             Sample request:
            
             Get: /api/Employees/1
             
             Sample Input:
             
             EmployeeDB List Info:
             
                  { Id = 1, Name = "John", Department = "IT", Email = "john@hyland.com" },
                  { Id = 2, Name = "Jane", Department = "HR", Email = "jane@hyland.com" }
                 
             Sample Response (Output):    
              
             Response Code: 200
             
             Response Body:
                 {
                      "id": 1,
                       "name": "John",
                             "department": "IT",
                              "email": "john@hyland.com"
                  }
                  
             ****************************************************************************************
             
             ** If the searched id is not present under EmployeeList, it will return 404 Not Found.
                  
               Sample request:
               
               Get: /api/Employees/123456
             
              Sample Response (Output):
             
             Status Code: 404 
             
             Response Body: 
             
             No Record Found For The Searched Id
             
             </remarks>
             <param name="id">The id of the employee</param>
             <returns>200 OK with the employee data</returns>
             <returns>404 Not Found if the employee is not found</returns>
        </member>
        <member name="T:DotNetOpenAPI.Models.EmployeeDB">
            <summary>
            EmployeeDB class is used to define the structure of the employee details.
            It contains the properties Id, Name, Department, and Email.
            </summary>
        </member>
        <member name="T:DotNetOpenAPI.Repositories.CRUDActions">
             <summary>
             CrudActions class is used to handle all the CRUD operations.
             It implements the ICRUDActions interface.
             It contains two methods GetEmployees and GetEmployee.
             It contains a static list of employees to store the employee details.
            </summary>
        </member>
        <member name="M:DotNetOpenAPI.Repositories.CRUDActions.GetEmployee(System.Int32)">
            <summary>
            EmployeeDB Method is used to get the employee with the given id.
            It returns the employee with the given id if it exists in the list.
            If the employee with the given id does not exist in the list, it returns null.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:DotNetOpenAPI.Repositories.CRUDActions.GetEmployees">
            <summary>
            GetEmployees method is used to get all the employees present in the list.
            If no records are present under EmployeeList, it will return null.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DotNetOpenAPI.Repositories.ICRUDActions">
            <summary>
            ICURDActions interface is used to define the CRUD operations.
            <remarks>
            This interface is implemented by the CRUDActions class to handle all the 
            CRUD operations.
            Currently we have two methods GetEmployees and GetEmployee.
            GetEmployees method is used to get all the employees present in the list.
            GetEmployee method is used to get the employee with the given id.
            </remarks>
            </summary>
        </member>
    </members>
</doc>
